import streamlit as st
from utils.ai_agent import agente_identifica_oportunidades
from utils.navigation import render_sidebar, ETAPAS


def render():
    render_sidebar()
    st.subheader("üõ†Ô∏è Etapa 3: Solu√ß√£o T√©cnica")

    objetivos_base = st.session_state.get("objetivos", "Objetivos ainda n√£o definidos.")
    st.markdown("**Objetivos definidos:**")
    st.text_area("Objetivos:", value=objetivos_base, height=200, disabled=False)

    if st.button("‚öôÔ∏è Gerar Solu√ß√£o T√©cnica com IA", key="btn_gerar_solucao"):
        with st.spinner("Gerando solu√ß√£o t√©cnica com IA..."):
            prompt_solucao = f"""
            Voc√™ √© um arquiteto de solu√ß√µes. Com base nos objetivos abaixo, descreva uma proposta t√©cnica de solu√ß√£o baseada em Data Science. Inclua tecnologias, abordagem, poss√≠veis fontes de dados e etapas de desenvolvimento. Sugira tamb√©m quais ferramentas, softwares ou frameworks da IBM poderiam ser utilizados.

            Objetivos:
            {objetivos_base}

            Responda com clareza, de forma estruturada.
            """
            solucao_gerada = agente_identifica_oportunidades(prompt_solucao)
            st.session_state.solucao_tecnica = solucao_gerada
            st.success("Solu√ß√£o t√©cnica gerada com sucesso!")

    st.markdown("**Solu√ß√£o T√©cnica Gerada:**")
    solucao = st.text_area(
        "Solu√ß√£o T√©cnica:",
        value=st.session_state.get("solucao_tecnica", ""),
        height=250,
    )
